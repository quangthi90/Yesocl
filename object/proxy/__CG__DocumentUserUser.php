<?php

namespace Proxy\__CG__\Document\User;

use Doctrine\ODM\MongoDB\Persisters\DocumentPersister;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class User extends \Document\User\User implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    private $__documentPersister__;
    public $__identifier__;
    public $__isInitialized__ = false;
    public function __construct(DocumentPersister $documentPersister, $identifier)
    {
        $this->__documentPersister__ = $documentPersister;
        $this->__identifier__ = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->__documentPersister__) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->__documentPersister__->load($this->__identifier__, $this) === null) {
                throw \Doctrine\ODM\MongoDB\DocumentNotFoundException::documentNotFound(get_class($this), $this->__identifier__);
            }
            unset($this->__documentPersister__, $this->__identifier__);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return $this->__identifier__;
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setUsername($username)
    {
        $this->__load();
        return parent::setUsername($username);
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function addEmail(\Document\User\Meta\Email $email)
    {
        $this->__load();
        return parent::addEmail($email);
    }

    public function setEmails($emails)
    {
        $this->__load();
        return parent::setEmails($emails);
    }

    public function getEmails()
    {
        $this->__load();
        return parent::getEmails();
    }

    public function getPrimaryEmail()
    {
        $this->__load();
        return parent::getPrimaryEmail();
    }

    public function isExistEmail($email)
    {
        $this->__load();
        return parent::isExistEmail($email);
    }

    public function setMeta($meta)
    {
        $this->__load();
        return parent::setMeta($meta);
    }

    public function getMeta()
    {
        $this->__load();
        return parent::getMeta();
    }

    public function getFullname()
    {
        $this->__load();
        return parent::getFullname();
    }

    public function setGroupUser($groupUser)
    {
        $this->__load();
        return parent::setGroupUser($groupUser);
    }

    public function getGroupUser()
    {
        $this->__load();
        return parent::getGroupUser();
    }

    public function addGroup(\Document\Group\Group $group)
    {
        $this->__load();
        return parent::addGroup($group);
    }

    public function setGroups($groups)
    {
        $this->__load();
        return parent::setGroups($groups);
    }

    public function getGroups()
    {
        $this->__load();
        return parent::getGroups();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setCreated($created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function prePersist()
    {
        $this->__load();
        return parent::prePersist();
    }

    public function setSolrUserContent($solrContent)
    {
        $this->__load();
        return parent::setSolrUserContent($solrContent);
    }

    public function getSolrUserContent()
    {
        $this->__load();
        return parent::getSolrUserContent();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'username', 'password', 'emails', 'meta', 'groupUser', 'groups', 'status', 'created');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->__documentPersister__) {
            $this->__isInitialized__ = true;
            $class = $this->__documentPersister__->getClassMetadata();
            $original = $this->__documentPersister__->load($this->__identifier__);
            if ($original === null) {
                throw \Doctrine\ODM\MongoDB\MongoDBException::documentNotFound(get_class($this), $this->__identifier__);
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->__documentPersister__, $this->__identifier__);
        }
        
    }
}